{"version":3,"sources":["components/Center/Center.tsx","components/Navigation/Navigation.tsx","components/Buttons/Buttons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Center","children","backgroundColor","id","styles","display","justifyContent","alignItems","height","style","Navigation","props","onPress","e","preventDefault","target","window","document","getElementById","currentTarget","href","split","scrollIntoView","behavior","position","width","onClick","className","Buttons","rel","marginRight","marginTop","src","process","alt","marginLeft","xmlns","fill","viewBox","fillRule","d","App","scrollThrottle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oKA4BeA,EApBA,SAAC,GAII,IAHlBC,EAGiB,EAHjBA,SAGiB,IAFjBC,uBAEiB,MAFC,mBAED,EADjBC,EACiB,EADjBA,GAEMC,EAAwB,CAC5BC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRN,gBAAiBA,GAGnB,OACE,qBAAKC,GAAIA,EAAIM,MAAOL,EAApB,SACGH,KC+BQS,EAlDI,SAACC,GAClB,IAAMC,EAAU,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAASC,OAAOC,SAASC,eAC7BL,EAAEM,cAAcC,KAAKC,MAAM,KAAK,IAE9BN,GACFA,EAAOO,eAAe,CAAEC,SAAU,YAItC,OACE,qBACEd,MAAO,CACLe,SAAU,QACVtB,gBAAiB,QACjBuB,MAAO,QAJX,SAOE,sBACEhB,MAAO,CACLJ,QAAS,OACTC,eAAgB,UAHpB,UAME,mBAAGoB,QAAS,SAACb,GAAD,OAAOD,EAAQC,IAAIO,KAAK,UAApC,SACE,qBAAK,uBAAqB,SAASO,UAAW,UAA9C,sBAIF,mBAAGD,QAAS,SAACb,GAAD,OAAOD,EAAQC,IAAIO,KAAK,SAApC,SACE,qBAAK,uBAAqB,QAAQO,UAAW,UAA7C,qBAIF,mBAAGD,QAAS,SAACb,GAAD,OAAOD,EAAQC,IAAIO,KAAK,QAApC,SACE,qBAAK,uBAAqB,OAAOO,UAAW,UAA5C,oBAIF,mBAAGD,QAAS,SAACb,GAAD,OAAOD,EAAQC,IAAIO,KAAK,SAApC,SACE,qBAAK,uBAAqB,QAAQO,UAAW,UAA7C,2B,gBCFKC,EAvCC,SAACjB,GACf,OACE,mBACEkB,IAAI,aACJT,KAAK,kDACLL,OAAO,SAHT,SAKE,sBAAKY,UAAW,qBAAhB,UACE,qBAAKlB,MAAO,CAAEqB,YAAa,GAAIC,UAAW,GAA1C,SACE,qBACEC,IAAG,UAAKC,IAAL,uBACHzB,OAAQ,GACR0B,IAAI,kBAGR,iDACA,qBAAKzB,MAAO,CAAE0B,WAAY,IAA1B,SACE,sBACEC,MAAM,6BACNX,MAAM,KACNjB,OAAO,KACP6B,KAAK,eACLC,QAAQ,YALV,UAOE,sBACEC,SAAS,UACTC,EAAE,qNAEJ,sBACED,SAAS,UACTC,EAAE,+HCJDC,MAzBf,WACE,OACE,gCACE,cAAC,EAAD,IAEA,eAAC,IAAD,CAAWC,eAAgB,IAA3B,UACE,cAAC,EAAD,CAAQvC,GAAG,SAASD,gBAAiB,SAArC,SACE,0CAEF,cAAC,EAAD,CAAQC,GAAG,QAAQD,gBAAiB,QAApC,SACE,yCAEF,cAAC,EAAD,CAAQC,GAAG,OAAOD,gBAAiB,OAAnC,SACE,wCAEF,cAAC,EAAD,CAAQC,GAAG,QAAQD,gBAAiB,QAApC,SACE,4CAIJ,cAAC,EAAD,QCXSyC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,K","file":"static/js/main.99666a05.chunk.js","sourcesContent":["import React, { CSSProperties } from \"react\";\n\ninterface CenterProps {\n  children: React.ReactNode;\n  backgroundColor?: string;\n  id: string;\n}\n\nconst Center = ({\n  children,\n  backgroundColor = \"rgb(255,255,255)\",\n  id,\n}: CenterProps) => {\n  const styles: CSSProperties = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: backgroundColor,\n  };\n\n  return (\n    <div id={id} style={styles}>\n      {children}\n    </div>\n  );\n};\n\nexport default Center;\n","import React from \"react\";\n\ninterface Props {}\n\nconst Navigation = (props: Props) => {\n  const onPress = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n    const target = window.document.getElementById(\n      e.currentTarget.href.split(\"#\")[1]\n    );\n    if (target) {\n      target.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        backgroundColor: \"beige\",\n        width: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <a onClick={(e) => onPress(e)} href=\"#orange\">\n          <div data-to-scrollspy-id=\"orange\" className={\"ss-item\"}>\n            orange\n          </div>\n        </a>\n        <a onClick={(e) => onPress(e)} href=\"#brown\">\n          <div data-to-scrollspy-id=\"brown\" className={\"ss-item\"}>\n            brown\n          </div>\n        </a>\n        <a onClick={(e) => onPress(e)} href=\"#blue\">\n          <div data-to-scrollspy-id=\"blue\" className={\"ss-item\"}>\n            blue\n          </div>\n        </a>\n        <a onClick={(e) => onPress(e)} href=\"#green\">\n          <div data-to-scrollspy-id=\"green\" className={\"ss-item\"}>\n            green\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\ninterface Props {}\n\nconst Buttons = (props: Props) => {\n  return (\n    <a\n      rel=\"noreferrer\"\n      href=\"https://github.com/pettiboy/react-ui-scrollspy/\"\n      target=\"_blank\"\n    >\n      <div className={\"button button-size\"}>\n        <div style={{ marginRight: 10, marginTop: 5 }}>\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/gh-logo.png`}\n            height={30}\n            alt=\"github-logo\"\n          />\n        </div>\n        <div>View On Github</div>\n        <div style={{ marginLeft: 10 }}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z\"\n            />\n          </svg>\n        </div>\n      </div>\n    </a>\n  );\n};\n\nexport default Buttons;\n","import Center from \"./components/Center/Center\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ScrollSpy from \"react-ui-scrollspy\";\nimport Buttons from \"./components/Buttons/Buttons\";\n\nfunction App() {\n  return (\n    <div>\n      <Navigation />\n\n      <ScrollSpy scrollThrottle={100}>\n        <Center id=\"orange\" backgroundColor={\"orange\"}>\n          <h1>Orange</h1>\n        </Center>\n        <Center id=\"brown\" backgroundColor={\"brown\"}>\n          <h1>Brown</h1>\n        </Center>\n        <Center id=\"blue\" backgroundColor={\"blue\"}>\n          <h1>Blue</h1>\n        </Center>\n        <Center id=\"green\" backgroundColor={\"green\"}>\n          <h1>Green</h1>\n        </Center>\n      </ScrollSpy>\n\n      <Buttons />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}