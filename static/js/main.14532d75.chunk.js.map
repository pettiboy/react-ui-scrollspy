{"version":3,"sources":["components/Buttons/Buttons.tsx","components/NavBar/NavBar.tsx","components/Center/Center.tsx","components/Demo1/Navigation.tsx","pages/Demo1.tsx","pages/Demo2.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Buttons","props","rel","href","target","className","style","marginRight","marginTop","src","process","height","alt","marginLeft","xmlns","width","fill","viewBox","fillRule","d","DummyNav","type","id","Center","children","backgroundColor","styles","display","justifyContent","alignItems","Navigation","onPress","e","preventDefault","window","document","getElementById","currentTarget","split","scrollIntoView","behavior","position","onClick","Demo1","scrollThrottle","useBoxMethod","Demo2","parentScrollContainerRef","useRef","offsetPosition","getBoundingClientRect","top","scrollBy","textAlign","ref","activeClass","App","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wMA2CeA,EAvCC,SAACC,GACf,OACE,mBACEC,IAAI,aACJC,KAAK,kDACLC,OAAO,SAHT,SAKE,sBAAKC,UAAW,+BAAhB,UACE,qBAAKC,MAAO,CAAEC,YAAa,GAAIC,UAAW,GAA1C,SACE,qBACEC,IAAG,UAAKC,sBAAL,uBACHC,OAAQ,GACRC,IAAI,kBAGR,iDACA,qBAAKN,MAAO,CAAEO,WAAY,IAA1B,SACE,sBACEC,MAAM,6BACNC,MAAM,KACNJ,OAAO,KACPK,KAAK,eACLC,QAAQ,YALV,UAOE,sBACEC,SAAS,UACTC,EAAE,qNAEJ,sBACED,SAAS,UACTC,EAAE,+HCcDC,EA5CE,SAACnB,GAChB,OACE,qBAAKI,UAAU,6EAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGF,KAAMO,uBAA8BL,UAAU,eAAjD,6BAKA,wBACEA,UAAU,iBACVgB,KAAK,SACL,iBAAe,WACf,iBAAe,WAJjB,SAME,sBAAMhB,UAAU,0BAIlB,qBAAKA,UAAU,2BAA2BiB,GAAG,UAA7C,SACE,qBAAIjB,UAAU,qBAAd,UACE,oBAAIA,UAAU,gBAAd,SACE,mBACEF,KAAMO,uBACNL,UAAU,kCAFZ,sBAOF,oBAAIA,UAAU,gBAAd,SACE,mBACEF,KAAMO,6BACNL,UAAU,kCAFZ,iCCJCkB,EArBA,SAAC,GAKI,IAJlBC,EAIiB,EAJjBA,SAIiB,IAHjBC,uBAGiB,MAHC,mBAGD,EAFjBH,EAEiB,EAFjBA,GAEiB,IADjBX,OAEMe,EAAwB,CAC5BC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZlB,YALe,MADR,QACQ,EAMfc,gBAAiBA,GAGnB,OACE,qBAAKH,GAAIA,EAAIhB,MAAOoB,EAApB,SACGF,KC6BQM,EAlDI,SAAC7B,GAClB,IAAM8B,EAAU,SAACC,GACfA,EAAEC,iBACF,IAAM7B,EAAS8B,OAAOC,SAASC,eAC7BJ,EAAEK,cAAclC,KAAKmC,MAAM,KAAK,IAE9BlC,GACFA,EAAOmC,eAAe,CAAEC,SAAU,YAItC,OACE,qBACElC,MAAO,CACLmC,SAAU,QACVhB,gBAAiB,QACjBV,MAAO,QAJX,SAOE,sBACET,MAAO,CACLqB,QAAS,OACTC,eAAgB,UAHpB,UAME,mBAAGc,QAAS,SAACV,GAAD,OAAOD,EAAQC,IAAI7B,KAAK,UAApC,SACE,qBAAK,uBAAqB,SAASE,UAAW,UAA9C,sBAIF,mBAAGqC,QAAS,SAACV,GAAD,OAAOD,EAAQC,IAAI7B,KAAK,SAApC,SACE,qBAAK,uBAAqB,QAAQE,UAAW,UAA7C,qBAIF,mBAAGqC,QAAS,SAACV,GAAD,OAAOD,EAAQC,IAAI7B,KAAK,QAApC,SACE,qBAAK,uBAAqB,OAAOE,UAAW,UAA5C,oBAIF,mBAAGqC,QAAS,SAACV,GAAD,OAAOD,EAAQC,IAAI7B,KAAK,SAApC,SACE,qBAAK,uBAAqB,QAAQE,UAAW,UAA7C,2B,gBChBKsC,EAtBD,SAAC1C,GACb,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAW2C,eAAgB,IAAKC,cAAc,EAA9C,UACE,cAAC,EAAD,CAAQvB,GAAG,SAASG,gBAAiB,SAArC,SACE,0CAEF,cAAC,EAAD,CAAQH,GAAG,QAAQG,gBAAiB,QAApC,SACE,yCAEF,cAAC,EAAD,CAAQH,GAAG,OAAOG,gBAAiB,OAAnC,SACE,wCAEF,cAAC,EAAD,CAAQH,GAAG,QAAQG,gBAAiB,QAApC,SACE,gDCiFKqB,EAhGD,SAAC7C,GACb,IAAM8C,EAA2BC,iBAA8B,MAEzDjB,EAAU,SAACC,GACfA,EAAEC,iBACF,IAAM7B,EAAS8B,OAAOC,SAASC,eAC7BJ,EAAEK,cAAclC,KAAKmC,MAAM,KAAK,IAElC,GAAIlC,EAAQ,CACV,IAEI6C,EADkB7C,EAAO8C,wBAAwBC,IADlC,GAInBjB,OAAOkB,SAAS,CACdD,IAAKF,EACLT,SAAU,aAKhB,OACE,mCACE,qBAAKnC,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBACEA,UAAU,6BACVC,MAAO,CAAEmB,gBAAiB,SAF5B,SAIE,qBAAKpB,UAAU,0BAAf,SACE,sBACEA,UAAU,uCACVC,MAAO,CAAEE,UAAW,gBAFtB,UAIE,oBAAIH,UAAU,OAAd,6BACA,mBAAGqC,QAAS,SAACV,GAAD,OAAOD,EAAQC,IAAI7B,KAAM,aAArC,SACE,qBACEG,MAAO,CAAE+C,UAAW,UACpB,uBAAqB,YACrBhD,UAAU,iBAHZ,yBAQF,mBAAGqC,QAAS,SAACV,GAAD,OAAOD,EAAQC,IAAI7B,KAAM,aAArC,SACE,qBACE,uBAAqB,YACrBE,UAAU,6BAFZ,yBAOF,mBAAGqC,QAAS,SAACV,GAAD,OAAOD,EAAQC,IAAI7B,KAAM,aAArC,SACE,qBACE,uBAAqB,YACrBE,UAAU,6BAFZ,gCAWR,qBAAKA,UAAU,2EAAf,SACE,qBACEiD,IAAKP,EADP,SAQE,eAAC,IAAD,CAEEQ,YAAY,mBACZX,eAAgB,IAChBC,cAAY,EAJd,UAME,cAAC,EAAD,CAAQvB,GAAG,YAAYG,gBAAgB,SAASd,OAAO,QAAvD,SACE,4CAEF,cAAC,EAAD,CAAQW,GAAG,YAAYG,gBAAgB,QAAQd,OAAO,QAAtD,SACE,4CAEF,cAAC,EAAD,CAAQW,GAAG,YAAYG,gBAAgB,OAAOd,OAAO,QAArD,SACE,2DCxEH6C,MAdf,WACE,OACE,eAAC,IAAD,CAAeC,SAAU/C,sBAAzB,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,EAAD,QCDSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.14532d75.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Props {}\n\nconst Buttons = (props: Props) => {\n  return (\n    <a\n      rel=\"noreferrer\"\n      href=\"https://github.com/pettiboy/react-ui-scrollspy/\"\n      target=\"_blank\"\n    >\n      <div className={\"button button-size text-dark\"}>\n        <div style={{ marginRight: 10, marginTop: 5 }}>\n          <img\n            src={`${process.env.PUBLIC_URL}/assets/gh-logo.png`}\n            height={30}\n            alt=\"github-logo\"\n          />\n        </div>\n        <div>View On Github</div>\n        <div style={{ marginLeft: 10 }}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z\"\n            />\n          </svg>\n        </div>\n      </div>\n    </a>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\n\ninterface Props {}\n\nconst DummyNav = (props: Props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top pt-3 position-sticky bg-dark\">\n      <div className=\"container-fluid\">\n        <a href={process.env.PUBLIC_URL + \"/\"} className=\"navbar-brand\">\n          React ScrollSpy\n        </a>\n\n        {/* <!-- toggle button --> */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navmenu\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        {/* <!-- links --> */}\n        <div className=\"collapse navbar-collapse\" id=\"navmenu\">\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item px-2\">\n              <a\n                href={process.env.PUBLIC_URL + \"/\"}\n                className=\"text-decoration-none text-white\"\n              >\n                Demo 1\n              </a>\n            </li>\n            <li className=\"nav-item px-2\">\n              <a\n                href={process.env.PUBLIC_URL + \"/demo-2\"}\n                className=\"text-decoration-none text-white\"\n              >\n                Demo 2\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default DummyNav;\n","import React, { CSSProperties } from \"react\";\n\ninterface CenterProps {\n  children: React.ReactNode;\n  backgroundColor?: string;\n  height?: string;\n  id: string;\n}\n\nconst Center = ({\n  children,\n  backgroundColor = \"rgb(255,255,255)\",\n  id,\n  height = \"100vh\",\n}: CenterProps) => {\n  const styles: CSSProperties = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: height,\n    backgroundColor: backgroundColor,\n  };\n\n  return (\n    <div id={id} style={styles}>\n      {children}\n    </div>\n  );\n};\n\nexport default Center;\n","import React from \"react\";\n\ninterface Props {}\n\nconst Navigation = (props: Props) => {\n  const onPress = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n    const target = window.document.getElementById(\n      e.currentTarget.href.split(\"#\")[1]\n    );\n    if (target) {\n      target.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        backgroundColor: \"beige\",\n        width: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <a onClick={(e) => onPress(e)} href=\"#orange\">\n          <div data-to-scrollspy-id=\"orange\" className={\"ss-item\"}>\n            orange\n          </div>\n        </a>\n        <a onClick={(e) => onPress(e)} href=\"#brown\">\n          <div data-to-scrollspy-id=\"brown\" className={\"ss-item\"}>\n            brown\n          </div>\n        </a>\n        <a onClick={(e) => onPress(e)} href=\"#blue\">\n          <div data-to-scrollspy-id=\"blue\" className={\"ss-item\"}>\n            blue\n          </div>\n        </a>\n        <a onClick={(e) => onPress(e)} href=\"#green\">\n          <div data-to-scrollspy-id=\"green\" className={\"ss-item\"}>\n            green\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import Center from \"../components/Center/Center\";\nimport Navigation from \"../components/Demo1/Navigation\";\n// import ScrollSpy from \"../components/src\";\nimport ScrollSpy from \"react-ui-scrollspy\";\n\ninterface Props {}\n\nconst Demo1 = (props: Props) => {\n  return (\n    <>\n      <Navigation />\n      <ScrollSpy scrollThrottle={100} useBoxMethod={false}>\n        <Center id=\"orange\" backgroundColor={\"orange\"}>\n          <h1>Orange</h1>\n        </Center>\n        <Center id=\"brown\" backgroundColor={\"brown\"}>\n          <h1>Brown</h1>\n        </Center>\n        <Center id=\"blue\" backgroundColor={\"blue\"}>\n          <h1>Blue</h1>\n        </Center>\n        <Center id=\"green\" backgroundColor={\"green\"}>\n          <h1>Green</h1>\n        </Center>\n      </ScrollSpy>\n    </>\n  );\n};\n\nexport default Demo1;\n","import React, { useRef } from \"react\";\nimport Center from \"../components/Center/Center\";\n// import ScrollSpy from \"../components/src\";\nimport ScrollSpy from \"react-ui-scrollspy\";\n\ninterface Props {}\n\nconst Demo2 = (props: Props) => {\n  const parentScrollContainerRef = useRef<HTMLDivElement | null>(null);\n\n  const onPress = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n    const target = window.document.getElementById(\n      e.currentTarget.href.split(\"#\")[1]\n    );\n    if (target) {\n      var headerOffset = 20;\n      var elementPosition = target.getBoundingClientRect().top;\n      var offsetPosition = elementPosition - headerOffset;\n\n      window.scrollBy({\n        top: offsetPosition,\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div\n            className=\"col-md-4 col-sm-4 col-lg-4\"\n            style={{ backgroundColor: \"green\" }}\n          >\n            <div className=\"position-relative w-100\">\n              <div\n                className=\"position-fixed top-0 ps-5 text-white\"\n                style={{ marginTop: \"calc(60vh/2)\" }}\n              >\n                <h1 className=\"mb-5\">Example Heading</h1>\n                <a onClick={(e) => onPress(e)} href={\"#section-1\"}>\n                  <div\n                    style={{ textAlign: \"center\" }}\n                    data-to-scrollspy-id=\"section-1\"\n                    className=\"ss-item-demo-2\"\n                  >\n                    Section 1\n                  </div>\n                </a>\n                <a onClick={(e) => onPress(e)} href={\"#section-2\"}>\n                  <div\n                    data-to-scrollspy-id=\"section-2\"\n                    className=\"ss-item-demo-2 text-center\"\n                  >\n                    Section 2\n                  </div>\n                </a>\n                <a onClick={(e) => onPress(e)} href={\"#section-3\"}>\n                  <div\n                    data-to-scrollspy-id=\"section-3\"\n                    className=\"ss-item-demo-2 text-center\"\n                  >\n                    Section 3\n                  </div>\n                </a>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-8 col-sm-8 col-lg-8 flex-column d-flex justify-content-center p-0\">\n            <div\n              ref={parentScrollContainerRef}\n              // style={{\n              //   position: \"relative\",\n              //   overflowY: \"scroll\",\n              //   height: \"50vh\",\n              // }}\n            >\n              <ScrollSpy\n                // parentScrollContainerRef={parentScrollContainerRef}\n                activeClass=\"ss-active-demo-2\"\n                scrollThrottle={100}\n                useBoxMethod\n              >\n                <Center id=\"section-1\" backgroundColor=\"orange\" height=\"150vh\">\n                  <p>Section 1</p>\n                </Center>\n                <Center id=\"section-2\" backgroundColor=\"brown\" height=\"150vh\">\n                  <p>Section 2</p>\n                </Center>\n                <Center id=\"section-3\" backgroundColor=\"blue\" height=\"150vh\">\n                  <p>Section 3</p>\n                </Center>\n              </ScrollSpy>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Demo2;\n","import { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport Buttons from \"./components/Buttons/Buttons\";\nimport DummyNav from \"./components/NavBar/NavBar\";\nimport Demo1 from \"./pages/Demo1\";\nimport Demo2 from \"./pages/Demo2\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <DummyNav />\n\n      <Routes>\n        <Route path=\"/\" element={<Demo1 />} />\n        <Route path=\"demo-2\" element={<Demo2 />} />\n      </Routes>\n      <Buttons />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}